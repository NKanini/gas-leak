/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { GasLeakAlertListRelationFilter } from "../../gasLeakAlert/base/GasLeakAlertListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringFilter } from "../../util/StringFilter";
import { LocationWhereUniqueInput } from "../../location/base/LocationWhereUniqueInput";
import { MaintenanceLogListRelationFilter } from "../../maintenanceLog/base/MaintenanceLogListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";

@InputType()
class SensorWhereInput {
  @ApiProperty({
    required: false,
    type: () => GasLeakAlertListRelationFilter,
  })
  @ValidateNested()
  @Type(() => GasLeakAlertListRelationFilter)
  @IsOptional()
  @Field(() => GasLeakAlertListRelationFilter, {
    nullable: true,
  })
  gasLeakAlerts?: GasLeakAlertListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => LocationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => LocationWhereUniqueInput)
  @IsOptional()
  @Field(() => LocationWhereUniqueInput, {
    nullable: true,
  })
  location?: LocationWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => MaintenanceLogListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MaintenanceLogListRelationFilter)
  @IsOptional()
  @Field(() => MaintenanceLogListRelationFilter, {
    nullable: true,
  })
  maintenanceLogs?: MaintenanceLogListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  serialNumber?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  typeField?: StringNullableFilter;
}

export { SensorWhereInput as SensorWhereInput };
