/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { GasLeakAlertCreateNestedManyWithoutSensorsInput } from "./GasLeakAlertCreateNestedManyWithoutSensorsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { LocationWhereUniqueInput } from "../../location/base/LocationWhereUniqueInput";
import { MaintenanceLogCreateNestedManyWithoutSensorsInput } from "./MaintenanceLogCreateNestedManyWithoutSensorsInput";

@InputType()
class SensorCreateInput {
  @ApiProperty({
    required: false,
    type: () => GasLeakAlertCreateNestedManyWithoutSensorsInput,
  })
  @ValidateNested()
  @Type(() => GasLeakAlertCreateNestedManyWithoutSensorsInput)
  @IsOptional()
  @Field(() => GasLeakAlertCreateNestedManyWithoutSensorsInput, {
    nullable: true,
  })
  gasLeakAlerts?: GasLeakAlertCreateNestedManyWithoutSensorsInput;

  @ApiProperty({
    required: false,
    type: () => LocationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => LocationWhereUniqueInput)
  @IsOptional()
  @Field(() => LocationWhereUniqueInput, {
    nullable: true,
  })
  location?: LocationWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => MaintenanceLogCreateNestedManyWithoutSensorsInput,
  })
  @ValidateNested()
  @Type(() => MaintenanceLogCreateNestedManyWithoutSensorsInput)
  @IsOptional()
  @Field(() => MaintenanceLogCreateNestedManyWithoutSensorsInput, {
    nullable: true,
  })
  maintenanceLogs?: MaintenanceLogCreateNestedManyWithoutSensorsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  serialNumber?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  typeField?: string | null;
}

export { SensorCreateInput as SensorCreateInput };
